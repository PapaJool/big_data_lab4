version: '3.8'

services:
  clickhouse:
    image: clickhouse/clickhouse-server
    ports:
      - 9000:9000
      - 8123:8123
      - 9009:9009
    environment:
      - CLICKHOUSE_USER
      - CLICKHOUSE_PASSWORD

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    hostname: kafka
    ports:
      - '9092:9092'
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:29093
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8090:8080"
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:29092

  web:
    env_file:
      - .env
    depends_on:
      - clickhouse
    build:
      dockerfile: model.dockerfile
    environment:
      - CLICKHOUSE_USER
      - CLICKHOUSE_PASSWORD
    command: bash -c "python src/preprocess.py && python src/train.py && python src/predict.py -m LOG_REG -t func && coverage run src/unit_tests/test_preprocess.py && coverage run -a src/unit_tests/test_training.py && coverage report -m && python src/db_init.py && uvicorn src.app:app --host 0.0.0.0 --port 8000"
    ports:
      - 8000:8000
    image: papajool/big_data_lab4:latest




